# Generated by Django 4.2.5 on 2023-10-12 11:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BizLkr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lock_no', models.IntegerField()),
                ('location', models.CharField(blank=True, db_comment='M/F', max_length=50, null=True)),
                ('tier_no', models.IntegerField(blank=True, null=True)),
                ('row_no', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, db_comment='In-Use(U) or Reserved(R) or Blocked for Payment(B) or Available (A) , Maintenance (M)', max_length=1, null=True)),
                ('added_dt', models.DateField(auto_now_add=True, null=True)),
                ('end_dt', models.DateField(blank=True, null=True)),
                ('active_boo', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'biz_lkr',
            },
        ),
        migrations.CreateModel(
            name='BizLkrType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_desc', models.CharField(blank=True, max_length=50, null=True)),
                ('amt_initial', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('min_hr', models.IntegerField(blank=True, null=True)),
                ('amt_per_hr', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('image_url', models.CharField(blank=True, max_length=512, null=True)),
                ('added_date', models.DateField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'biz_lkr_type',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('security_block', models.CharField(blank=True, db_comment='Defaulted to N, if customer enters pin incorrectly 3 times, it wil be set to Y. and can only be updated by Admin to N after changing the sec_pin', max_length=1, null=True)),
                ('start_dt', models.DateTimeField(blank=True, null=True)),
                ('end_dt', models.DateTimeField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, db_comment='Calcualted when end dt is populated \n', null=True)),
                ('active_boo', models.IntegerField(blank=True, null=True)),
                ('advance_amt', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('tot_lock_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('oth_chrgs', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('pay_req_json', models.JSONField(blank=True, null=True)),
                ('pay_res_json', models.JSONField(blank=True, null=True)),
                ('added_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_dt', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'book',
            },
        ),
        migrations.CreateModel(
            name='BusinessInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=90, null=True)),
                ('address_1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=45, null=True)),
                ('state', models.CharField(blank=True, max_length=45, null=True)),
                ('pincode', models.CharField(blank=True, max_length=6, null=True)),
                ('location', models.TextField(blank=True, db_comment='Geo location ', null=True)),
                ('contact_1', models.CharField(blank=True, max_length=10, null=True)),
                ('contact_2', models.CharField(blank=True, max_length=10, null=True)),
                ('category', models.CharField(blank=True, db_comment='Free Text\n', max_length=50, null=True)),
                ('added_date', models.DateField(auto_now_add=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('active_boo', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'business_info',
            },
        ),
        migrations.CreateModel(
            name='CommTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'comm_template',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=60, null=True)),
                ('prim_no', models.CharField(blank=True, max_length=10, null=True)),
                ('alt_no', models.CharField(blank=True, max_length=10, null=True)),
                ('cust_comm_mode', models.CharField(blank=True, max_length=1, null=True)),
                ('cust_enroll_dt', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='LkrCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.IntegerField(blank=True, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('depth', models.IntegerField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
                ('added_date', models.DateField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'lkr_catalog',
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'payment_type',
            },
        ),
        migrations.CreateModel(
            name='Prebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_init', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('book_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('payment_boo', models.IntegerField(blank=True, db_comment='Payment Completed or not, initial value will be set to N, once payment is comepleted, this will be updated to Y', null=True)),
                ('pay_req_json', models.JSONField(blank=True, null=True)),
                ('pay_res_json', models.JSONField(blank=True, null=True)),
                ('update_dt', models.DateTimeField(auto_now=True, null=True)),
                ('biz', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.businessinfo')),
                ('cust', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.customer')),
                ('lkr_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.bizlkrtype')),
            ],
            options={
                'db_table': 'prebook',
            },
        ),
        migrations.CreateModel(
            name='SecurityPin',
            fields=[
                ('sec_pin_id', models.AutoField(primary_key=True, serialize=False)),
                ('sec_pin_mobile_no', models.CharField(blank=True, max_length=10, null=True)),
                ('sec_pin_pin', models.CharField(blank=True, max_length=4, null=True)),
                ('sec_pin_added', models.DateTimeField(auto_now_add=True, null=True)),
                ('sec_pin_pbook', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.prebook')),
            ],
            options={
                'db_table': 'security_pin',
            },
        ),
        migrations.CreateModel(
            name='RequestConfirm',
            fields=[
                ('rc_id', models.AutoField(primary_key=True, serialize=False)),
                ('rc_status', models.CharField(blank=True, db_comment='request open\nmsg sent\nmsg delivered\nmsg read\nmsg confirm', max_length=1, null=True)),
                ('book_h_hbook', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.book')),
            ],
            options={
                'db_table': 'request_confirm',
            },
        ),
        migrations.CreateModel(
            name='Reqreslog',
            fields=[
                ('req_res_id', models.AutoField(primary_key=True, serialize=False)),
                ('req_res_type', models.CharField(blank=True, max_length=3, null=True)),
                ('req_res_json', models.JSONField(blank=True, null=True)),
                ('req_res_added', models.DateTimeField(blank=True, null=True)),
                ('req_res_biz', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.businessinfo')),
            ],
            options={
                'db_table': 'reqreslog',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('txn_id', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_txn_id', models.CharField(blank=True, max_length=100, null=True)),
                ('gateway_name', models.CharField(blank=True, max_length=45, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=45, null=True)),
                ('mode', models.CharField(blank=True, max_length=45, null=True)),
                ('mid', models.CharField(blank=True, max_length=100, null=True)),
                ('ref_id', models.CharField(blank=True, max_length=45, null=True)),
                ('pay_req', models.JSONField(blank=True, null=True)),
                ('pay_res', models.JSONField(blank=True, null=True)),
                ('added_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.book')),
                ('payment_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.paymenttype')),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='LockStatusLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_cd', models.CharField(db_comment='Open(O) or Closed(C)\n', max_length=1)),
                ('added_dt', models.DateTimeField(auto_now_add=True)),
                ('biz_lkr', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.bizlkr')),
            ],
            options={
                'db_table': 'lock_status_log',
            },
        ),
        migrations.CreateModel(
            name='LkrSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_cd', models.CharField(max_length=1)),
                ('status_count', models.IntegerField(db_column='status_count')),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('biz', models.ForeignKey(db_column='biz', on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.businessinfo')),
                ('lkr_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.bizlkrtype')),
            ],
            options={
                'db_table': 'lkr_summary',
            },
        ),
        migrations.CreateModel(
            name='LkrStatusLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_cd', models.CharField(max_length=1)),
                ('added_dt', models.DateTimeField(auto_now_add=True)),
                ('biz_lkr', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.bizlkr')),
            ],
            options={
                'db_table': 'lkr_status_log',
            },
        ),
        migrations.CreateModel(
            name='InstrumentBiz',
            fields=[
                ('inst_id', models.IntegerField(primary_key=True, serialize=False)),
                ('inst_type', models.CharField(blank=True, db_comment='Access Controller\nLocker Controller\nLock\nServer\nModem\nRepeater\nController\nRFID Tag', max_length=45, null=True)),
                ('inst_rfid', models.CharField(blank=True, max_length=200, null=True)),
                ('inst_description', models.CharField(blank=True, max_length=100, null=True)),
                ('inst_added_date', models.DateField(auto_now_add=True, null=True)),
                ('inst_status', models.CharField(blank=True, db_comment='Working\nNot Working\nReplaced\nRemoved\nLost', max_length=20, null=True)),
                ('inst_active', models.CharField(blank=True, max_length=1, null=True)),
                ('inst_biz', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.businessinfo')),
            ],
            options={
                'db_table': 'instrument_biz',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=60, null=True)),
                ('role', models.CharField(max_length=60)),
                ('mobile_no', models.CharField(max_length=10)),
                ('alt_no', models.CharField(blank=True, max_length=10, null=True)),
                ('email_id', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(max_length=256)),
                ('pass_updated_dt', models.DateTimeField(blank=True, null=True)),
                ('pass_expiry_dt', models.DateTimeField(blank=True, null=True)),
                ('address_1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=45, null=True)),
                ('state', models.CharField(blank=True, max_length=45, null=True)),
                ('pincode', models.CharField(blank=True, max_length=6, null=True)),
                ('added_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('active_boo', models.IntegerField()),
                ('biz', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.businessinfo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('desc', models.CharField(blank=True, max_length=200, null=True)),
                ('user_name', models.CharField(blank=True, max_length=45, null=True)),
                ('added_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('biz', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.businessinfo')),
            ],
            options={
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='CustomerCommunication',
            fields=[
                ('comm_id', models.IntegerField(primary_key=True, serialize=False)),
                ('comm_in_out', models.CharField(blank=True, max_length=1, null=True)),
                ('comm_dt', models.DateTimeField(auto_now_add=True, null=True)),
                ('comm_mode', models.CharField(blank=True, max_length=1, null=True)),
                ('comm_cust', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.customer')),
            ],
            options={
                'db_table': 'customer_communication',
            },
        ),
        migrations.CreateModel(
            name='CodeTable',
            fields=[
                ('code_id', models.IntegerField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('code_description', models.CharField(blank=True, max_length=60, null=True)),
                ('code_active', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'code_table',
                'unique_together': {('code_id', 'code')},
            },
        ),
        migrations.AddField(
            model_name='book',
            name='biz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.businessinfo'),
        ),
        migrations.AddField(
            model_name='book',
            name='biz_lkr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.bizlkr'),
        ),
        migrations.AddField(
            model_name='book',
            name='cust',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.customer'),
        ),
        migrations.AddField(
            model_name='book',
            name='pbook',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.prebook'),
        ),
        migrations.AddField(
            model_name='book',
            name='sec_pin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.securitypin'),
        ),
        migrations.AddField(
            model_name='bizlkrtype',
            name='biz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.businessinfo'),
        ),
        migrations.AddField(
            model_name='bizlkr',
            name='biz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.businessinfo'),
        ),
        migrations.AddField(
            model_name='bizlkr',
            name='lkr_catalog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.lkrcatalog'),
        ),
        migrations.AddField(
            model_name='bizlkr',
            name='lkr_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.bizlkrtype'),
        ),
        migrations.CreateModel(
            name='BizAccessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(max_length=60)),
                ('biz', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage_locker.businessinfo')),
            ],
            options={
                'db_table': 'biz_access_type',
            },
        ),
    ]
